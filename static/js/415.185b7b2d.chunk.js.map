{"version":3,"file":"static/js/415.185b7b2d.chunk.js","mappings":"0NAEaA,EAAgBC,EAAAA,GAAAA,GAAH,+KAUbC,EAAoBD,EAAAA,GAAAA,GAAH,0M,SCRjBE,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,YACE,wBAAKF,KACL,SAACL,EAAD,UACGI,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,MAAOK,EAAd,EAAcA,YAAd,OACV,SAACR,EAAD,WACE,SAAC,EAAAS,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,gBACES,IAAG,yCAAoCL,GACvCM,IAAKX,EACLY,MAAM,MACNZ,MAAOA,OANWI,EADd,QAenB,C,8ECPD,UAfa,WACX,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmB,OAAOC,KAAKH,EAChC,GAAE,KAGD,yBACGf,EAAOmB,OAAS,IACf,SAAC,IAAD,CAAYnB,OAAQA,EAAQC,MAAM,qBAIzC,C,uHCVDmB,EAAAA,EAAAA,SAAAA,QALiB,gCAMjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QANc,mCAOdC,SALW,SAQN,IAAML,EAAkB,mCAAG,WAAMM,GAAN,gGAEPH,EAAAA,EAAAA,IAAA,yBAA4BG,IAFrB,cAExBC,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,gCAK9BC,QAAQC,IAAI,KAAMC,SALY,yDAAH,sDASlBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAAA,EAAAA,IAAA,6BAAgCW,IADxB,cACzBP,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/ApiFetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListBox = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const MoviesListBoxItem = styled.li`\n  display: block;\n  border-radius: 6px;\n  transition: scale 200ms;\n  &:hover,\n  &:focus {\n    scale: 1.06;\n  }\n  & img {\n    border-radius: 6px;\n    height: 100%;\n  }\n`;\n","import { Container } from 'components/SiteHeader/SiteHeader.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesListBox, MoviesListBoxItem } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, title }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <h2>{title}</h2>\n      <MoviesListBox>\n        {movies.map(({ id, title, poster_path }) => (\n          <MoviesListBoxItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n                width=\"150\"\n                title={title}\n              />\n            </Link>\n          </MoviesListBoxItem>\n        ))}\n      </MoviesListBox>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { fetchPopularMovies } from 'services/ApiFetch';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetchPopularMovies('day').then(setMovies);\n  }, []);\n\n  return (\n    <div>\n      {movies.length > 0 && (\n        <MoviesList movies={movies} title=\"Popular movies:\" />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0e13fbdd8c25dd146508a582d48a9360';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w200';\nconst lang = 'en-US';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport const fetchPopularMovies = async period => {\n  try {\n    const response = await axios.get(`trending/movie/${period}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesByName = async query => {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n"],"names":["MoviesListBox","styled","MoviesListBoxItem","MoviesList","movies","title","location","useLocation","map","id","poster_path","Link","to","state","from","src","alt","width","useState","setMovies","useEffect","fetchPopularMovies","then","length","axios","api_key","language","period","response","data","results","console","log","message","fetchMoviesByName","query"],"sourceRoot":""}