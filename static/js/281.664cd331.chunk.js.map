{"version":3,"file":"static/js/281.664cd331.chunk.js","mappings":"0NAEaA,EAAgBC,EAAAA,GAAAA,GAAH,+KAUbC,EAAoBD,EAAAA,GAAAA,GAAH,0M,SCRjBE,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,YACE,wBAAKF,KACL,SAACL,EAAD,UACGI,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,MAAOK,EAAd,EAAcA,YAAd,OACV,SAACR,EAAD,WACE,SAAC,EAAAS,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACE,gBACES,IAAG,yCAAoCL,GACvCM,IAAKX,EACLY,MAAM,MACNZ,MAAOA,OANWI,EADd,QAenB,C,kICxBYS,EAAajB,EAAAA,GAAAA,KAAH,gOAYVkB,EAAmBlB,EAAAA,GAAAA,OAAH,mpBAkChBmB,EAAiBnB,EAAAA,GAAAA,MAAH,uP,SCzCpB,SAASoB,EAAT,GAAyD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,eAC3C,OACE,SAAC,KAAD,WACE,UAACN,EAAD,CAAYO,SAAUF,EAAtB,WACE,SAACJ,EAAD,CAAkBO,KAAK,SAAvB,qBACA,SAACN,EAAD,CACEO,KAAK,QACLD,KAAK,OACLJ,MAAOA,EACPM,OAAO,OACPC,WAAS,EACTC,YAAY,cACZC,SAAU,SAAAC,GAAK,OAAIR,EAAeQ,EAAMC,OAAOX,MAAhC,QAKxB,C,sBCkBD,EApCe,WACb,OAA4BY,EAAAA,EAAAA,UAAS,MAArC,eAAO9B,EAAP,KAAe+B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,kCAAMG,EAAaE,IAAI,gBAAvB,QAAmC,EAAnC,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAcL,EAAaE,IAAI,SAgBrC,OALAI,EAAAA,EAAAA,YAAU,WACJD,IACFE,EAAAA,EAAAA,IAAkBF,GAAaG,KAAKV,EAEvC,GAAE,CAACO,KAEF,4BACE,SAACrB,EAAD,CACEC,MAAOkB,EACPjB,SAdW,SAAAS,GACfA,EAAMc,iBACNR,EAA0B,KAAVE,EAAe,CAAEA,MAAOA,GAAU,CAAC,EACpD,EAYKhB,eAnBe,SAAAgB,GACnBC,EAASD,EACV,IAmBIpC,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,IAC9BA,GAA4B,IAAlBA,EAAO2C,SAChB,mEAIP,C,uHCjCDC,EAAAA,EAAAA,SAAAA,QALiB,gCAMjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QANc,mCAOdC,SALW,SAQN,IAAMC,EAAkB,mCAAG,WAAMC,GAAN,gGAEPJ,EAAAA,EAAAA,IAAA,yBAA4BI,IAFrB,cAExBC,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,gCAK9BC,QAAQC,IAAI,KAAMC,SALY,yDAAH,sDASlBd,EAAiB,mCAAG,WAAMJ,GAAN,uFACRQ,EAAAA,EAAAA,IAAA,6BAAgCR,IADxB,cACzBa,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/ApiFetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListBox = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const MoviesListBoxItem = styled.li`\n  display: block;\n  border-radius: 6px;\n  transition: scale 200ms;\n  &:hover,\n  &:focus {\n    scale: 1.06;\n  }\n  & img {\n    border-radius: 6px;\n    height: 100%;\n  }\n`;\n","import { Container } from 'components/SiteHeader/SiteHeader.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MoviesListBox, MoviesListBoxItem } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, title }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      <h2>{title}</h2>\n      <MoviesListBox>\n        {movies.map(({ id, title, poster_path }) => (\n          <MoviesListBoxItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title}\n                width=\"150\"\n                title={title}\n              />\n            </Link>\n          </MoviesListBoxItem>\n        ))}\n      </MoviesListBox>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 10px;\n  overflow: hidden;\n  border: 1px solid black;\n  margin-top: 10px;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    color: white;\n    background-color: orangered;\n  }\n  & label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const SearchbarInput = styled.input`\n  display: inline-block;\n  /* width: 100%; */\n  /* font: inherit; */\n  font-size: 25px;\n  border: none;\n  outline: none;\n  padding: 0px 4px 4px 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Container } from 'components/SiteHeader/SiteHeader.styled';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchbarInput,\n} from './Searchbar.styled';\n\nexport function Searchbar({ value, onSearch, onChangeFilter }) {\n  return (\n    <Container>\n      <SearchForm onSubmit={onSearch}>\n        <SearchFormButton type=\"submit\">Search</SearchFormButton>\n        <SearchbarInput\n          name=\"query\"\n          type=\"text\"\n          value={value}\n          typeof=\"text\"\n          autoFocus\n          placeholder=\"Search move\"\n          onChange={event => onChangeFilter(event.target.value)}\n        />\n      </SearchForm>\n    </Container>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchMoviesByName } from 'services/ApiFetch';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(() => searchParams.get('query') ?? '');\n\n  const searchQuery = searchParams.get('query');\n\n  const changeFilter = query => {\n    setQuery(query);\n  };\n\n  const onSearch = event => {\n    event.preventDefault();\n    setSearchParams(query !== '' ? { query: query } : {});\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      fetchMoviesByName(searchQuery).then(setMovies);\n    }\n  }, [searchQuery]);\n  return (\n    <div>\n      <Searchbar\n        value={query}\n        onSearch={onSearch}\n        onChangeFilter={changeFilter}\n      />\n      {movies && <MoviesList movies={movies} />}\n      {movies && movies.length === 0 && (\n        <div>There are not movies with such name</div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0e13fbdd8c25dd146508a582d48a9360';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w200';\nconst lang = 'en-US';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport const fetchPopularMovies = async period => {\n  try {\n    const response = await axios.get(`trending/movie/${period}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesByName = async query => {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n"],"names":["MoviesListBox","styled","MoviesListBoxItem","MoviesList","movies","title","location","useLocation","map","id","poster_path","Link","to","state","from","src","alt","width","SearchForm","SearchFormButton","SearchbarInput","Searchbar","value","onSearch","onChangeFilter","onSubmit","type","name","typeof","autoFocus","placeholder","onChange","event","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","query","setQuery","searchQuery","useEffect","fetchMoviesByName","then","preventDefault","length","axios","api_key","language","fetchPopularMovies","period","response","data","results","console","log","message"],"sourceRoot":""}